Парадигмы программирования.
а) http://acm.mipt.ru/twiki/bin/view/Method/StylesSamples

б) http://math.csu.ru/~rusear/SKT_MT401_Liter/ProgrammingParadigm(Wikipedia).htm
Парадигма программирования — это совокупность подходов, методов, стратегий, идей и понятий, определяющая стиль написания программ.
Парадигма программирования представляет (и определяет) то, как программист видит выполнение программы. Например, в объектно-ориентированном программировании программист рассматривает программу как набор взаимодействующих объектов, тогда как в функциональном программировании программа представляется в виде цепочки вычисления функций.

Термин «парадигма программирования» впервые применил Роберт Флойд в своей лекции лауреата премии Тьюринга.

Основные модели программирования.

1)Императивное программирование-это парадигма программирования, которая, в отличие от декларативного программирования, описывает процесс вычисления в виде инструкций, изменяющих состояние программы
2)Функциональное программирование-раздел дискретной математики и парадигм программирования, в которой процесс вычисления трактуется как вычисление значений функций в математическом понимании последних.
3)Логическое программирование- парадигма программирования, а также раздел дискретной математики, изучающий методы и возможности этой парадигмы, основанной на выводе новых фактов из данных фактов согласно заданным логическим правилам
4)Объектно-ориентированное программирование-парадигма программирования, в которой основными концепциями являются понятия объектов и классов
а)Программирование, основанное на классах
б)Программирование, основанное на прототипах
с)Субъектно-ориентированное программирование

Понятие обьект и класс в С++

Классы в С++ - это абстракция описывающая методы, свойства, ещё не существующих объектов.
Объекты - конкретное представление абстракции, имеющее свои свойства и методы